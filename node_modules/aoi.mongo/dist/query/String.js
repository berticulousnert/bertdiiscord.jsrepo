"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StrFilter = void 0;
const Length_1 = require("./Length");
const Match_1 = require("./Match");
/** A filter which work with strings */
class StrFilter {
    constructor(path, filter, expr) {
        this.path = path;
        this.filter = filter;
        this.expr = expr;
    }
    /** The string length filter */
    get length() {
        return new Length_1.Length("$strLenCP", this.path, this.filter, this.expr);
    }
    /** Filter if string is equal */
    equal(str) {
        return this.compare("$eq", str);
    }
    /** Filter if string is not equal */
    notEqual(str) {
        return this.compare("$ne", str);
    }
    /** Filter if string match with the regex */
    match(regex) {
        const match = new Match_1.Match(this.filter);
        const options = [];
        if (regex.ignoreCase)
            options.push("i");
        if (regex.multiline)
            options.push("m");
        if (regex.dotAll)
            options.push("s");
        this.expr.$regexMatch = {
            input: this.path,
            regex: {
                $literal: regex.source
            },
            options: {
                $literal: options.join("")
            }
        };
        return match;
    }
    /** Filter if the comparison returns true */
    compare(operator, str) {
        const match = new Match_1.Match(this.filter);
        this.expr[operator] = [this.path, {
                $literal: str
            }];
        return match;
    }
}
exports.StrFilter = StrFilter;
