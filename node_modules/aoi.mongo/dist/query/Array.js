"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrayFilter = void 0;
const Filter_1 = require("./Filter");
const Length_1 = require("./Length");
/** A filter which work with arrays */
class ArrayFilter {
    constructor(str, path, filter, expr) {
        this.str = str;
        this.path = path;
        this.filter = filter;
        this.expr = expr;
    }
    /** The array length filter */
    get length() {
        return new Length_1.Length("$size", this.path, this.filter, this.expr);
    }
    first() {
        const variable = this.str.str;
        this.str.increment();
        const expr = {};
        const filter = new Filter_1.ArbitraryFilter(this.str, `$$${variable}`, this.filter, expr);
        this.expr.$let = {
            vars: {
                [variable]: {
                    $first: this.path
                }
            },
            in: expr
        };
        return filter;
    }
    last() {
        const variable = this.str.str;
        this.str.increment();
        const expr = {};
        const filter = new Filter_1.ArbitraryFilter(this.str, `$$${variable}`, this.filter, expr);
        this.expr.$let = {
            vars: {
                [variable]: {
                    $last: this.path
                }
            },
            in: expr
        };
        return filter;
    }
    at(index) {
        const variable = this.str.str;
        this.str.increment();
        const expr = {};
        const filter = new Filter_1.ArbitraryFilter(this.str, `$$${variable}`, this.filter, expr);
        this.expr.$let = {
            vars: {
                [variable]: {
                    $arrayElemAt: [this.path, { $literal: index }]
                }
            },
            in: expr
        };
        return filter;
    }
}
exports.ArrayFilter = ArrayFilter;
