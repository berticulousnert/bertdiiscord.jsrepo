import { Filter as MongoFilter } from "mongodb";
import { Document, Types } from "../Types";
import { Length } from "./Length";
import { Match } from "./Match";
/** A filter which work with strings */
export declare class StrFilter<T extends Types> {
    protected readonly path: string;
    protected readonly expr: Record<string, unknown>;
    protected readonly filter: MongoFilter<Document<T>>;
    constructor(path: string, filter: MongoFilter<Document<T>>, expr: Record<string, unknown>);
    /** The string length filter */
    get length(): Length<T>;
    /** Filter if string is equal */
    equal(str: string): Match<T>;
    /** Filter if string is not equal */
    notEqual(str: string): Match<T>;
    /** Filter if string match with the regex */
    match(regex: RegExp): Match<T>;
    /** Filter if the comparison returns true */
    compare(operator: "$eq" | "$ne", str: string): Match<T>;
}
