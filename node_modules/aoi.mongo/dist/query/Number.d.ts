import { Filter as MongoFilter } from "mongodb";
import { Document, Types } from "../Types";
import { Match } from "./Match";
/** A filter which work with numbers */
export declare class NumFilter<T extends Types> {
    protected readonly path: string;
    protected readonly expr: Record<string, unknown>;
    protected readonly filter: MongoFilter<Document<T>>;
    constructor(path: string, filter: MongoFilter<Document<T>>, expr: Record<string, unknown>);
    /** Filter if number is equal */
    equal(num: number): Match<T>;
    /** Filter if number is not equal */
    notEqual(num: number): Match<T>;
    /** Filter if number is greater than */
    greaterThan(num: number): Match<T>;
    /** Filter if number is greater than or equal */
    greaterThanEqual(num: number): Match<T>;
    /** Filter if number is less than */
    lessThan(num: number): Match<T>;
    /** Filter if number is less than or equal */
    lessThanEqual(num: number): Match<T>;
    /** Filter if the comparison return true */
    compare(operator: "$eq" | "$ne" | "$gt" | "$gte" | "$lt" | "$lte", num: number): Match<T>;
}
