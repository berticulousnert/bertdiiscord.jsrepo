"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BigFilter = void 0;
const mongodb_1 = require("mongodb");
const Match_1 = require("./Match");
/** A filter which work with bigints */
class BigFilter {
    constructor(path, filter, expr) {
        this.path = path;
        this.filter = filter;
        this.expr = expr;
    }
    /** Filter if bigint is equal */
    equal(big) {
        return this.compare("$eq", big);
    }
    /** Filter if bigint is not equal */
    notEqual(big) {
        return this.compare("$ne", big);
    }
    /** Filter if bigint is greater than */
    greaterThan(big) {
        return this.compare("$gt", big);
    }
    /** Filter if bigint is greater than or equal */
    greaterThanEqual(big) {
        return this.compare("$gte", big);
    }
    /** Filter if bigint is less than */
    lessThan(big) {
        return this.compare("$lt", big);
    }
    /** Filter if bigint is less than or equal */
    lessThanEqual(big) {
        return this.compare("$lte", big);
    }
    /** Filter if the comparison return true */
    compare(operator, big) {
        const match = new Match_1.Match(this.filter);
        this.expr[operator] = [this.path, {
                $literal: mongodb_1.Long.fromBigInt(big)
            }];
        return match;
    }
}
exports.BigFilter = BigFilter;
