"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getType = void 0;
function getType(value, refStack) {
    switch (typeof value) {
        case "undefined":
            return 0 /* Null */;
        case "boolean":
            return 1 /* Bool */;
        case "number":
            return 2 /* Number */;
        case "bigint":
            return 3 /* BigInt */;
        case "string":
            return 4 /* String */;
        case "object":
            {
                if (value === null)
                    return 0 /* Null */;
                else if (value instanceof Date)
                    return 5 /* Date */;
                else if (value instanceof RegExp)
                    return 6 /* RegExp */;
                else if (refStack.has(value))
                    return 12 /* Reference */;
                else if (value instanceof Uint8Array)
                    return 7 /* Bytes */;
                else if (Array.isArray(value))
                    return 8 /* Array */;
                else if (value instanceof Set)
                    return 9 /* Set */;
                else if (value instanceof Map)
                    return 10 /* Map */;
                else
                    return 11 /* Object */;
            }
        default:
            throw new TypeError(`Type '${typeof value}' is not supported`);
    }
}
exports.getType = getType;
